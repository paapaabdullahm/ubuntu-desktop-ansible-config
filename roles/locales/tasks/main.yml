---

- name: Set localtime
  copy:
    remote_src: yes
    src: "/usr/share/zoneinfo/{{ timezone }}"
    dest: "/etc/localtime"

- name: Set timezone
  copy:
    content: "{{ timezone }}\n"
    dest: "/etc/timezone"

- name: Update TimeZone data
  command: dpkg-reconfigure --frontend noninteractive tzdata

- name: Ensure {{ locale }} file exists at source
  stat:
    path: "{{ playbook_dir }}/roles/locales/files/{{ locale }}"
  register: locale_src_file

- debug:
    msg: "{{ locale }} is not defined (file doesn't exist)"
  when: not locale_src_file.stat.exists

- debug:
    msg: "{{ locale }} is defined (file exist)"
  when: locale_src_file.stat.exists is defined and locale_src_file.stat.exists

- name: Copy the {{ locale }} file to {{ locales_dir }}
  copy:
    src: "{{ locale }}"
    dest: "{{ locales_dir }}/{{ locale }}"
    owner: root
    group: root
    mode: 'u=rw,go=r'
  register: locale_file_copy
  when:
    - locale_src_file.stat.exists is defined and locale_src_file.stat.exists

- name: Compile {{ locale }} into {{ format }} format
  command: localedef -f {{ format }} -i {{ locale }} {{ locale_compiled }}
  when: locale_file_copy is succeeded

- name: Set locale to {{ locale }}
  become: false
  command: localectl set-locale LANG={{ locale_compiled }}

# - name: Customize Date and Time
#   become: false
#   command: gsettings set {{ item.module }} {{ item.key }} {{ item.value }}
#   with_items:
#     - { module: "com.canonical.indicator.datetime", key: "show-day", value: "true" }
#     - { module: "com.canonical.indicator.datetime", key: "show-date", value: "true" }
#     - { module: "com.canonical.indicator.datetime", key: "time-format", value: "'12-hour'" }
#     - { module: "com.canonical.indicator.datetime", key: "show-seconds", value: "true" }
#     - { module: "com.canonical.indicator.datetime", key: "show-calendar", value: "true" }
#     - { module: "com.canonical.indicator.datetime", key: "show-locations", value: "true" }
#     - { module: "com.canonical.indicator.datetime", key: "locations", value: "{{ locations }}" }
